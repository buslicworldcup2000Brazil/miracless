version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: miracless-postgres
    environment:
      POSTGRES_DB: miracless_db
      POSTGRES_USER: miracless_user
      POSTGRES_PASSWORD: miracless_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U miracless_user -d miracless_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miracless-backend
    environment:
      - DATABASE_URL=postgresql://miracless_user:miracless_password@postgres:5432/miracless_db
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - FIREBASE_SERVICE_ACCOUNT=${FIREBASE_SERVICE_ACCOUNT}
      - TON_API_KEY=${TON_API_KEY}
      - ETH_API_KEY=${ETH_API_KEY}
      - BNB_API_KEY=${BNB_API_KEY}
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      - TRON_API_KEY=${TRON_API_KEY}
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - PORT=3000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - ./frontend/build:/app/frontend/build
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Nginx)
  frontend:
    image: nginx:alpine
    container_name: miracless-frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: miracless-network