{
  "name": "miracless-root",
  "version": "1.0.0",
  "description": "Miracless Lottery Bot - Root package.json",
  "scripts": {
    "build": "cd backend && npm install && npx prisma generate && cd ../frontend && npm install && npm run build",
    "build:frontend": "cd frontend && npm install && npm run build",
    "build:backend": "cd backend && npm install",
    "start": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "start:backend": "cd backend && npm start",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ..",
    "prepare-deploy": "npm run install:all && npm run prisma-generate && npm run build",
    "docker:build": "docker build -t miracless-app .",
    "docker:run": "docker run -p 3000:3000 miracless-app",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:test": "docker build -t miracless-test . && echo 'âœ… Docker build successful!'",
    "dev": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "deploy": "npm run build && git add . && git commit -m \"Deploy\" && git push origin main",
    "test-firebase": "cd backend && node test-firebase.js",
    "test-db": "cd backend && node test-db.js",
    "test-postgres": "cd backend && node test-postgres.js",
    "test-api": "cd backend && node test-api.js",
    "test-all": "npm run test-postgres && npm run test-api",
    "view-db": "cd backend && node view-db.js",
    "diagnose": "cd backend && node diagnose.js",
    "prisma-generate": "cd backend && npx prisma generate",
    "prisma-push": "cd backend && npx prisma db push",
    "prisma-studio": "cd backend && npx prisma studio --port 5555"
  },
  "dependencies": {
    "@telegram-apps/telegram-ui": "^2.1.9",
    "buffer": "^6.0.3"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
