{
  "name": "miracless-root",
  "version": "1.0.0",
  "description": "Miracless Lottery Bot - Root package.json",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "build": "cd backend && npm install && npx prisma generate && cd ../frontend && npm install && npm run build",
    "build:frontend": "cd frontend && npm install && npm run build",
    "build:backend": "cd backend && npm install",
    "start": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "start:backend": "cd backend && npm start",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ..",
    "prepare-deploy": "npm run install:all && npm run prisma-generate && npm run build",
    "docker:build": "docker build -t miracless-app .",
    "docker:run": "docker run -p 3000:3000 miracless-app",
    "docker:test": "docker build -t miracless-test . && echo '✅ Docker build successful!'",
    "railway:check": "echo '🔍 Checking Railway deployment status...' && echo '📋 Make sure these files exist:' && ls -la Dockerfile railway.toml .nvmrc || echo '❌ Missing deployment files'",
    "railway:force": "echo '💪 Force Railway to rebuild:' && echo '1. Push changes to GitHub' && echo '2. Go to Railway Dashboard' && echo '3. Click Deploy' && echo '4. Or use: railway redeploy'",
    "railway:env-check": "echo '🔍 Railway Environment Variables Check:' && echo 'Required: DATABASE_URL, TELEGRAM_BOT_TOKEN, FIREBASE_SERVICE_ACCOUNT' && echo 'Optional: TON_API_KEY, ETH_API_KEY, COINGECKO_API_KEY'",
    "update-lockfiles": "rm -f package-lock.json frontend/package-lock.json backend/package-lock.json && npm install && cd frontend && npm install && cd ../backend && npm install && cd ..",
    "dev": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "deploy": "npm run build && git add . && git commit -m \"Deploy\" && git push origin main",
    "test": "echo 'No tests configured yet'",
    "prisma-generate": "cd backend && npx prisma generate",
    "prisma-push": "cd backend && npx prisma db push",
    "prisma-studio": "cd backend && npx prisma studio --port 5555"
  },
  "dependencies": {
    "@telegram-apps/telegram-ui": "^2.1.9",
    "buffer": "^6.0.3"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
